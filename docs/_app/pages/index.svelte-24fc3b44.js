import{S as Dt,i as Tt,s as jt,aK as at,e as o,t as i,k as x,j as me,c as n,a as f,g as h,d as s,n as q,m as Ct,b as t,f as ge,E as e,o as _e,u as O,w as ye,x as J,v as ke,au as Gt,aL as Mt,N as bt,r as we}from"../chunks/vendor-e56b8d6e.js";import{e as Et}from"../chunks/_examples-1ee80df0.js";import{e as St}from"../chunks/_examples_ssr-6ff6d41f.js";import{h as $t}from"../chunks/hljsDefineSvelte-18bb4212.js";import"../chunks/Brush.html-631d388b.js";import"../chunks/dots-47ba7b3b.js";import"../chunks/pointsFour-f1065c0a.js";import"../chunks/ClevelandDotPlot.percent-range.html-f25e2475.js";function xt(w,c,v){const p=w.slice();return p[1]=c[v],p}function qt(w,c,v){const p=w.slice();return p[1]=c[v],p}function Lt(w){let c,v,p,g=w[1].title+"",L,j,P,m,D,Q,b,a,A,E;var $=w[1].component;function N(u){return{}}return $&&(a=new $(N())),{c(){c=o("div"),v=o("h4"),p=o("a"),L=i(g),P=x(),m=o("a"),D=i("Edit"),b=x(),a&&me(a.$$.fragment),A=x(),this.h()},l(u){c=n(u,"DIV",{class:!0});var k=f(c);v=n(k,"H4",{class:!0});var S=f(v);p=n(S,"A",{"sveltekit:prefetch":!0,href:!0,class:!0});var C=f(p);L=h(C,g),C.forEach(s),P=q(S),m=n(S,"A",{class:!0,href:!0,target:!0,rel:!0});var R=f(m);D=h(R,"Edit"),R.forEach(s),S.forEach(s),b=q(k),a&&Ct(a.$$.fragment,k),A=q(k),k.forEach(s),this.h()},h(){t(p,"sveltekit:prefetch",""),t(p,"href",j="/example/"+w[1].slug),t(p,"class","svelte-rfh4mq"),t(m,"class","edit-repl svelte-rfh4mq"),t(m,"href",Q="https://svelte.dev/repl/"+w[1].replPath),t(m,"target","_blank"),t(m,"rel","nofollow"),t(v,"class","title svelte-rfh4mq"),t(c,"class","gallery-item svelte-rfh4mq")},m(u,k){ge(u,c,k),e(c,v),e(v,p),e(p,L),e(v,P),e(v,m),e(m,D),e(c,b),a&&_e(a,c,null),e(c,A),E=!0},p(u,k){if($!==($=u[1].component)){if(a){we();const S=a;O(S.$$.fragment,1,0,()=>{ke(S,1)}),ye()}$?(a=new $(N()),me(a.$$.fragment),J(a.$$.fragment,1),_e(a,c,A)):a=null}},i(u){E||(a&&J(a.$$.fragment,u),E=!0)},o(u){a&&O(a.$$.fragment,u),E=!1},d(u){u&&s(c),a&&ke(a)}}}function At(w){let c,v,p,g=w[1].title+"",L,j,P,m,D,Q,b,a,A,E;var $=w[1].component;function N(u){return{}}return $&&(a=new $(N())),{c(){c=o("div"),v=o("h4"),p=o("a"),L=i(g),P=x(),m=o("a"),D=i("Edit"),b=x(),a&&me(a.$$.fragment),A=x(),this.h()},l(u){c=n(u,"DIV",{class:!0});var k=f(c);v=n(k,"H4",{class:!0});var S=f(v);p=n(S,"A",{"sveltekit:prefetch":!0,href:!0,class:!0});var C=f(p);L=h(C,g),C.forEach(s),P=q(S),m=n(S,"A",{class:!0,href:!0,target:!0,rel:!0});var R=f(m);D=h(R,"Edit"),R.forEach(s),S.forEach(s),b=q(k),a&&Ct(a.$$.fragment,k),A=q(k),k.forEach(s),this.h()},h(){t(p,"sveltekit:prefetch",""),t(p,"href",j="/example-ssr/"+w[1].slug),t(p,"class","svelte-rfh4mq"),t(m,"class","edit-repl svelte-rfh4mq"),t(m,"href",Q="https://svelte.dev/repl/"+w[1].replPath),t(m,"target","_blank"),t(m,"rel","nofollow"),t(v,"class","title svelte-rfh4mq"),t(c,"class","gallery-item svelte-rfh4mq"),Gt(c,"scaled",w[1].title.toLowerCase().includes("map"))},m(u,k){ge(u,c,k),e(c,v),e(v,p),e(p,L),e(v,P),e(v,m),e(m,D),e(c,b),a&&_e(a,c,null),e(c,A),E=!0},p(u,k){if($!==($=u[1].component)){if(a){we();const S=a;O(S.$$.fragment,1,0,()=>{ke(S,1)}),ye()}$?(a=new $(N()),me(a.$$.fragment),J(a.$$.fragment,1),_e(a,c,A)):a=null}},i(u){E||(a&&J(a.$$.fragment,u),E=!0)},o(u){a&&O(a.$$.fragment,u),E=!1},d(u){u&&s(c),a&&ke(a)}}}function Jt(w){let c,v,p,g,L,j,P,m,D,Q,b,a,A,E,$,N,u,k,S,C,R,be,le,Ee,Se,Z,$e,xe,qe,H,Le,W,Ae,Ce,oe,He,Ve,ne,Ie,Pe,De,V,Te,X,je,Ge,z,Me,Je,Y,Ne,Re,ze,ce,ie,Ht=at.highlight(w[0],{language:"svelte"}).value+"",Be,ee,Ue,T,he,We,Xe,G,Ye,B,Fe,Ke,U,Oe,Qe,Ze,pe,et,tt,te,de,ae=Et,_=[];for(let l=0;l<ae.length;l+=1)_[l]=Lt(qt(w,ae,l));const Vt=l=>O(_[l],1,1,()=>{_[l]=null});let re=St,y=[];for(let l=0;l<re.length;l+=1)y[l]=At(xt(w,re,l));const It=l=>O(y[l],1,1,()=>{y[l]=null});return{c(){c=o("meta"),v=o("meta"),p=x(),g=o("div"),L=o("div"),j=o("div"),P=x(),m=o("h1"),D=i("Layer Cake"),Q=x(),b=o("div"),a=o("p"),A=i("Layer Cake is a graphics framework for "),E=o("a"),$=i("Svelte"),N=i(". It uses the measurements of your target div and your data extents to create scales that "),u=o("span"),k=i("stay synced"),S=i(" on layout changes. Use these scales to organize multiple, "),C=o("span"),R=i("mostly-reusable Svelte components"),be=i(", whether they be SVG, HTML, Canvas or WebGL. Since they all share the same coordinate space, you can build your graphic one layer at a time. It can also be used to easily create "),le=o("span"),Ee=i("responsive graphics server-side"),Se=i(" that "),Z=o("a"),$e=i("work without JavaScript"),xe=i("."),qe=x(),H=o("p"),Le=i("Unlike other libraries, "),W=o("a"),Ae=i("chart components"),Ce=i(" live "),oe=o("span"),He=i("inside your project"),Ve=i(", so you have complete control for "),ne=o("span"),Ie=i("customization"),Pe=i("."),De=x(),V=o("p"),Te=i("Read the "),X=o("a"),je=i("guide"),Ge=i(", try the "),z=o("a"),Me=i("starter template"),Je=i(" or check out "),Y=o("a"),Ne=i("example components"),Re=i(". See the examples below and even edit them live. Here's a sample of what the code looks like:"),ze=x(),ce=o("div"),ie=o("pre"),Be=x(),ee=o("div");for(let l=0;l<_.length;l+=1)_[l].c();Ue=x(),T=o("div"),he=o("h2"),We=i("Server-side rendering"),Xe=x(),G=o("p"),Ye=i("Svelte makes it easy to render your project server side and Layer Cake has built-in helpers to make it even easier for charts. All of these examples below (except for their canvas components) will load and be responsive without client-side JavaScript. The advantage is that you can see the chart as soon as the page loads, avoiding blank placeholder spaces. HTML charts use percentage-based scales and SVG charts take advanage of certain "),B=o("a"),Fe=i("viewBox"),Ke=i(" and CSS settings that Rich Harris, Svelte's creator, outlined in "),U=o("a"),Oe=i("this blog post"),Qe=i("."),Ze=x(),pe=o("p"),et=i("For shapes that are difficult to render using percentages, such as swoopy arrows, Layer Cake makes it easy to superimpose client-side components that will hydrate once JavaScript is available. See the annotated column example below."),tt=x(),te=o("div");for(let l=0;l<y.length;l+=1)y[l].c();this.h()},l(l){const d=Mt('[data-svelte="svelte-ep3aok"]',document.head);c=n(d,"META",{name:!0,content:!0}),v=n(d,"META",{name:!0,content:!0}),d.forEach(s),p=q(l),g=n(l,"DIV",{class:!0});var r=f(g);L=n(r,"DIV",{class:!0});var M=f(L);j=n(M,"DIV",{id:!0,class:!0}),f(j).forEach(s),P=q(M),m=n(M,"H1",{class:!0});var rt=f(m);D=h(rt,"Layer Cake"),rt.forEach(s),M.forEach(s),Q=q(r),b=n(r,"DIV",{id:!0,class:!0});var fe=f(b);a=n(fe,"P",{class:!0});var I=f(a);A=h(I,"Layer Cake is a graphics framework for "),E=n(I,"A",{href:!0,target:!0,rel:!0,class:!0});var st=f(E);$=h(st,"Svelte"),st.forEach(s),N=h(I,". It uses the measurements of your target div and your data extents to create scales that "),u=n(I,"SPAN",{class:!0});var lt=f(u);k=h(lt,"stay synced"),lt.forEach(s),S=h(I," on layout changes. Use these scales to organize multiple, "),C=n(I,"SPAN",{class:!0});var ot=f(C);R=h(ot,"mostly-reusable Svelte components"),ot.forEach(s),be=h(I,", whether they be SVG, HTML, Canvas or WebGL. Since they all share the same coordinate space, you can build your graphic one layer at a time. It can also be used to easily create "),le=n(I,"SPAN",{class:!0});var nt=f(le);Ee=h(nt,"responsive graphics server-side"),nt.forEach(s),Se=h(I," that "),Z=n(I,"A",{href:!0,class:!0});var ct=f(Z);$e=h(ct,"work without JavaScript"),ct.forEach(s),xe=h(I,"."),I.forEach(s),qe=q(fe),H=n(fe,"P",{class:!0});var F=f(H);Le=h(F,"Unlike other libraries, "),W=n(F,"A",{href:!0,"sveltekit:prefetch":!0,class:!0});var it=f(W);Ae=h(it,"chart components"),it.forEach(s),Ce=h(F," live "),oe=n(F,"SPAN",{class:!0});var ht=f(oe);He=h(ht,"inside your project"),ht.forEach(s),Ve=h(F,", so you have complete control for "),ne=n(F,"SPAN",{class:!0});var ft=f(ne);Ie=h(ft,"customization"),ft.forEach(s),Pe=h(F,"."),F.forEach(s),De=q(fe),V=n(fe,"P",{class:!0});var K=f(V);Te=h(K,"Read the "),X=n(K,"A",{href:!0,"sveltekit:prefetch":!0,class:!0});var ut=f(X);je=h(ut,"guide"),ut.forEach(s),Ge=h(K,", try the "),z=n(K,"A",{href:!0,target:!0,rel:!0,class:!0});var vt=f(z);Me=h(vt,"starter template"),vt.forEach(s),Je=h(K," or check out "),Y=n(K,"A",{href:!0,"sveltekit:prefetch":!0,class:!0});var pt=f(Y);Ne=h(pt,"example components"),pt.forEach(s),Re=h(K,". See the examples below and even edit them live. Here's a sample of what the code looks like:"),K.forEach(s),fe.forEach(s),ze=q(r),ce=n(r,"DIV",{class:!0});var dt=f(ce);ie=n(dt,"PRE",{class:!0});var Pt=f(ie);Pt.forEach(s),dt.forEach(s),Be=q(r),ee=n(r,"DIV",{id:!0});var mt=f(ee);for(let se=0;se<_.length;se+=1)_[se].l(mt);mt.forEach(s),Ue=q(r),T=n(r,"DIV",{class:!0,id:!0});var ue=f(T);he=n(ue,"H2",{class:!0});var gt=f(he);We=h(gt,"Server-side rendering"),gt.forEach(s),Xe=q(ue),G=n(ue,"P",{class:!0});var ve=f(G);Ye=h(ve,"Svelte makes it easy to render your project server side and Layer Cake has built-in helpers to make it even easier for charts. All of these examples below (except for their canvas components) will load and be responsive without client-side JavaScript. The advantage is that you can see the chart as soon as the page loads, avoiding blank placeholder spaces. HTML charts use percentage-based scales and SVG charts take advanage of certain "),B=n(ve,"A",{href:!0,target:!0,rel:!0,class:!0});var _t=f(B);Fe=h(_t,"viewBox"),_t.forEach(s),Ke=h(ve," and CSS settings that Rich Harris, Svelte's creator, outlined in "),U=n(ve,"A",{href:!0,target:!0,rel:!0,class:!0});var yt=f(U);Oe=h(yt,"this blog post"),yt.forEach(s),Qe=h(ve,"."),ve.forEach(s),Ze=q(ue),pe=n(ue,"P",{});var kt=f(pe);et=h(kt,"For shapes that are difficult to render using percentages, such as swoopy arrows, Layer Cake makes it easy to superimpose client-side components that will hydrate once JavaScript is available. See the annotated column example below."),kt.forEach(s),ue.forEach(s),tt=q(r),te=n(r,"DIV",{id:!0});var wt=f(te);for(let se=0;se<y.length;se+=1)y[se].l(wt);wt.forEach(s),r.forEach(s),this.h()},h(){document.title="Layer Cake",t(c,"name","og:title"),t(c,"content","Layer Cake"),t(v,"name","twitter:title"),t(v,"content","Layer Cake"),t(j,"id","logo"),t(j,"class","svelte-rfh4mq"),t(m,"class","svelte-rfh4mq"),t(L,"class","logo-container svelte-rfh4mq"),t(E,"href","https://svelte.dev"),t(E,"target","_blank"),t(E,"rel","noopener"),t(E,"class","svelte-rfh4mq"),t(u,"class","strong svelte-rfh4mq"),t(C,"class","strong svelte-rfh4mq"),t(le,"class","strong svelte-rfh4mq"),t(Z,"href","#server-side"),t(Z,"class","svelte-rfh4mq"),t(a,"class","svelte-rfh4mq"),t(W,"href","/components"),t(W,"sveltekit:prefetch",""),t(W,"class","svelte-rfh4mq"),t(oe,"class","strong svelte-rfh4mq"),t(ne,"class","strong svelte-rfh4mq"),t(H,"class","svelte-rfh4mq"),t(X,"href","guide"),t(X,"sveltekit:prefetch",""),t(X,"class","svelte-rfh4mq"),t(z,"href","https://github.com/mhkeller/layercake-template"),t(z,"target","_blank"),t(z,"rel","nofollow"),t(z,"class","svelte-rfh4mq"),t(Y,"href","components"),t(Y,"sveltekit:prefetch",""),t(Y,"class","svelte-rfh4mq"),t(V,"class","svelte-rfh4mq"),t(b,"id","dek"),t(b,"class","svelte-rfh4mq"),t(ie,"class","svelte-rfh4mq"),t(ce,"class","code-example svelte-rfh4mq"),t(ee,"id","gallery"),t(he,"class","svelte-rfh4mq"),t(B,"href","https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/viewBox"),t(B,"target","_blank"),t(B,"rel","nofollow"),t(B,"class","svelte-rfh4mq"),t(U,"href","https://dev.to/richharris/a-new-technique-for-making-responsive-javascript-free-charts-gmp"),t(U,"target","_blank"),t(U,"rel","nofollow"),t(U,"class","svelte-rfh4mq"),t(G,"class","svelte-rfh4mq"),t(T,"class","section-hed svelte-rfh4mq"),t(T,"id","server-side"),t(te,"id","ssr-gallery"),t(g,"class","main svelte-rfh4mq")},m(l,d){e(document.head,c),e(document.head,v),ge(l,p,d),ge(l,g,d),e(g,L),e(L,j),e(L,P),e(L,m),e(m,D),e(g,Q),e(g,b),e(b,a),e(a,A),e(a,E),e(E,$),e(a,N),e(a,u),e(u,k),e(a,S),e(a,C),e(C,R),e(a,be),e(a,le),e(le,Ee),e(a,Se),e(a,Z),e(Z,$e),e(a,xe),e(b,qe),e(b,H),e(H,Le),e(H,W),e(W,Ae),e(H,Ce),e(H,oe),e(oe,He),e(H,Ve),e(H,ne),e(ne,Ie),e(H,Pe),e(b,De),e(b,V),e(V,Te),e(V,X),e(X,je),e(V,Ge),e(V,z),e(z,Me),e(V,Je),e(V,Y),e(Y,Ne),e(V,Re),e(g,ze),e(g,ce),e(ce,ie),ie.innerHTML=Ht,e(g,Be),e(g,ee);for(let r=0;r<_.length;r+=1)_[r].m(ee,null);e(g,Ue),e(g,T),e(T,he),e(he,We),e(T,Xe),e(T,G),e(G,Ye),e(G,B),e(B,Fe),e(G,Ke),e(G,U),e(U,Oe),e(G,Qe),e(T,Ze),e(T,pe),e(pe,et),e(g,tt),e(g,te);for(let r=0;r<y.length;r+=1)y[r].m(te,null);de=!0},p(l,[d]){if(d&0){ae=Et;let r;for(r=0;r<ae.length;r+=1){const M=qt(l,ae,r);_[r]?(_[r].p(M,d),J(_[r],1)):(_[r]=Lt(M),_[r].c(),J(_[r],1),_[r].m(ee,null))}for(we(),r=ae.length;r<_.length;r+=1)Vt(r);ye()}if(d&0){re=St;let r;for(r=0;r<re.length;r+=1){const M=xt(l,re,r);y[r]?(y[r].p(M,d),J(y[r],1)):(y[r]=At(M),y[r].c(),J(y[r],1),y[r].m(te,null))}for(we(),r=re.length;r<y.length;r+=1)It(r);ye()}},i(l){if(!de){for(let d=0;d<ae.length;d+=1)J(_[d]);for(let d=0;d<re.length;d+=1)J(y[d]);de=!0}},o(l){_=_.filter(Boolean);for(let d=0;d<_.length;d+=1)O(_[d]);y=y.filter(Boolean);for(let d=0;d<y.length;d+=1)O(y[d]);de=!1},d(l){s(c),s(v),l&&s(p),l&&s(g),bt(_,l),bt(y,l)}}}const Kt=!0;function Nt(w){return at.registerLanguage("svelte",$t),$t(at),[`<script>
	// The library provides a main wrapper component
	// and a bunch empty layout components...
	import { LayerCake, Svg, Html, Canvas } from 'layercake';

	// ...that you fill with your own chart components,
	// that live inside your project and which you
	// can copy and paste from here as starting points.
	import AxisX from './components/AxisX.svelte';
  import AxisY from './components/AxisY.svelte';
  import Line from './components/Line.svelte';
  import Scatter from './components/Scatter.svelte';
  import Labels from './components/Labels.svelte';

	const data = [{ x: 0, y: 1 }, { x: 1, y: 2 }, { x: 2, y: 3 }];
<\/script>

<style>
	.chart-container {
		width: 100%;
		height: 500px;
	}
</style>

<div class="chart-container">
	<LayerCake
		x='x'
		y='y'
		{data}
	>
		<Svg>
			<AxisX/>
			<AxisY/>
			<Line color='#f0c'/>
		</Svg>

		<Canvas>
			<Scatter color='#0fc'/>
		</Canvas>

		<Html>
			<Labels/>
		</Html>
	</LayerCake>
</div>`.trim().replace(/\t/g,"  ")]}class Ot extends Dt{constructor(c){super();Tt(this,c,Nt,Jt,jt,{})}}export{Ot as default,Kt as prerender};
